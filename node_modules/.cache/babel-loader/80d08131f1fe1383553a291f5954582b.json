{"ast":null,"code":"import React,{useEffect}from'react';import{Card,Container,Button}from'react-bootstrap';import{LinkContainer}from'react-router-bootstrap';import'./Boards.css';import Localbase from'localbase';import PlusButton from\"../../assets/Buttons/AddButton.svg\";import DeleteButton from\"../../assets/Buttons/DeleteButton.svg\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var db=new Localbase('Mani');db.config.debug=false;var Boards=function Boards(_ref){var notes=_ref.notes,ide=_ref.ide,setNotes=_ref.setNotes,boardtitle=_ref.boardtitle,setNoteId=_ref.setNoteId,setNoteele=_ref.setNoteele,setNoteTitle=_ref.setNoteTitle;window.onbeforeunload=function(){window.setTimeout(function(){window.location='/';},0);window.onbeforeunload=null;};/*----------Professor Mauro's code if we need to fall back to it----------------\r\n    function deleteBoard(id, db) {\r\n        setNotes(notes.filter(n => n.id !== id))\r\n        db.collection('dbnotes').doc({id:id}).delete()\r\n    }\r\n\r\n\r\n    function getBoards(db) {\r\n        db.collection('dbnotes').get().then(dbnotes => {\r\n            //console.log('dbnotes', dbnotes);\r\n            setNotes(dbnotes)\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        getBoards(db);\r\n      }, []);   \r\n--------------------------------------------------------------------------------*/function addNoteToDB(ide,notes){var n=notes.length+1;notes.push({id:n,title:'note '+n,noteele:[]});db.collection('boards').doc({id:ide}).update({notes:notes});}function deleteNoteFromDB(ide,notes,givenId){var n=notes.findIndex(function(a){return a.id===givenId;});notes.splice(n,1);{/*console.log(notes)*/}db.collection('boards').doc({id:ide}).update({notes:notes});}function getNotes(){db.collection('boards').doc({id:ide}).get().then(function(doc){{/*console.log(doc)*/}if(doc){setNotes(doc.notes);}});}function changeBoardTitle(event){var newTitle=event.target.value;db.collection('boards').doc({id:ide}).update({title:newTitle});/* var newTitle=event.target.value\r\n        notes.filter(note =>{\r\n          if(note.id===noteId){\r\n            note.title=newTitle\r\n          }\r\n        })\r\n        db.collection('boards').doc({id:ide}).update({\r\n          notes:notes\r\n        })*/}return/*#__PURE__*/_jsx(\"div\",{className:\"appWidth\",children:/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(\"textarea\",{rows:\"1\",className:\"Header\",onChange:changeBoardTitle,children:boardtitle}),/*#__PURE__*/_jsx(\"div\",{id:\"notes\",children:notes.map(function(a){var linker=boardtitle+'/'+a.title;return/*#__PURE__*/_jsxs(Card,{id:a.id,className:\"cardBoard\",children:[/*#__PURE__*/_jsx(LinkContainer,{to:linker,children:/*#__PURE__*/_jsx(Card.Body,{onClick:function onClick(){setNoteele(a.noteele);setNoteId(a.id);setNoteTitle(a.title);},children:/*#__PURE__*/_jsx(Card.Title,{children:a.title})})}),/*#__PURE__*/_jsx(\"button\",{className:\"deleteButton\",onClick:function onClick(){deleteNoteFromDB(ide,notes,a.id);},children:/*#__PURE__*/_jsx(\"img\",{src:DeleteButton,alt:\"Delete\"})})]});})}),/*#__PURE__*/_jsx(\"button\",{className:\"addNote\",onClick:function onClick(){addNoteToDB(ide,notes);},onFocus:getNotes(),onvariant:\"info\",type:\"submit\",children:/*#__PURE__*/_jsx(\"img\",{src:PlusButton,alt:\"Add\"})})]})});};export default Boards;","map":{"version":3,"sources":["C:/Users/zackj/Documents/GitHub/Manifest_Repo/src/components/Boards/Boards.js"],"names":["React","useEffect","Card","Container","Button","LinkContainer","Localbase","db","config","debug","Boards","notes","ide","setNotes","boardtitle","setNoteId","setNoteele","setNoteTitle","window","onbeforeunload","setTimeout","location","addNoteToDB","n","length","push","id","title","noteele","collection","doc","update","deleteNoteFromDB","givenId","findIndex","a","splice","getNotes","get","then","changeBoardTitle","event","newTitle","target","value","map","linker","DeleteButton","PlusButton"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\r\nimport {Card,Container, Button} from 'react-bootstrap';\r\nimport {LinkContainer} from 'react-router-bootstrap';\r\nimport './Boards.css';\r\nimport Localbase from 'localbase';\r\nimport PlusButton from \"../../assets/Buttons/AddButton.svg\"\r\nimport DeleteButton from '../../assets/Buttons/DeleteButton.svg'\r\n  let db = new Localbase('Mani');\r\n  db.config.debug = false\r\n\r\nconst Boards = ({notes,ide,setNotes,boardtitle,setNoteId,setNoteele,setNoteTitle}) => {\r\n  window.onbeforeunload = function() { \r\n    window.setTimeout(function () { \r\n        window.location = '/';\r\n    }, 0); \r\n    window.onbeforeunload = null; \r\n  }\r\n\r\n\r\n    \r\n/*----------Professor Mauro's code if we need to fall back to it----------------\r\n    function deleteBoard(id, db) {\r\n        setNotes(notes.filter(n => n.id !== id))\r\n        db.collection('dbnotes').doc({id:id}).delete()\r\n    }\r\n\r\n\r\n    function getBoards(db) {\r\n        db.collection('dbnotes').get().then(dbnotes => {\r\n            //console.log('dbnotes', dbnotes);\r\n            setNotes(dbnotes)\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        getBoards(db);\r\n      }, []);   \r\n--------------------------------------------------------------------------------*/\r\nfunction addNoteToDB(ide, notes){\r\n    var n=notes.length+1\r\n    notes.push({\r\n      id: n,\r\n      title:'note '+ n,\r\n      noteele:[]\r\n    })\r\n      db.collection('boards').doc({id:ide}).update({\r\n      notes:notes\r\n    })\r\n  }\r\nfunction deleteNoteFromDB(ide,notes,givenId){\r\n        var n=notes.findIndex(a => a.id===givenId)\r\n        \r\n            notes.splice(n,1)\r\n            {/*console.log(notes)*/}\r\n      db.collection('boards').doc({id:ide}).update({\r\n        notes:notes\r\n      })\r\n    }\r\n\r\n\r\nfunction getNotes(){\r\n      db.collection('boards').doc({id:ide}).get().then(doc =>{\r\n          {/*console.log(doc)*/}\r\n        if(doc){\r\n        setNotes(doc.notes)\r\n        }\r\n      })\r\n      }\r\n      \r\nfunction changeBoardTitle(event){\r\n  var newTitle=event.target.value\r\n        db.collection('boards').doc({id:ide}).update({\r\n            title:newTitle\r\n        })\r\n       /* var newTitle=event.target.value\r\n        notes.filter(note =>{\r\n          if(note.id===noteId){\r\n            note.title=newTitle\r\n          }\r\n        })\r\n        db.collection('boards').doc({id:ide}).update({\r\n          notes:notes\r\n        })*/\r\n      }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"appWidth\">\r\n            <Container>\r\n            <textarea rows=\"1\" className=\"Header\" onChange={changeBoardTitle}>{boardtitle}</textarea>\r\n            {/*----------Professor Mauro's code if we need to fall back to it----------------\r\n            notes.map((note) => (\r\n            <Card border=\"warning\" className=\"cardBoard\">\r\n                    <Card.Body>\r\n                    <i className=\"icon-trash float-right\" onClick={() => deleteBoard(note.id, db)}></i>\r\n                    <Card.Title>{note.title}</Card.Title>\r\n                    <Card.Text>\r\n                        {note.text}\r\n                    </Card.Text>\r\n                    </Card.Body>\r\n            </Card>\r\n            ))*/}\r\n            <div id='notes'>\r\n            {notes.map((a)=>{\r\n                var linker=boardtitle+'/'+a.title\r\n                return(\r\n                  <Card id={a.id} className=\"cardBoard\">\r\n                  <LinkContainer to={linker}>\r\n                      <Card.Body onClick={() => {setNoteele(a.noteele)\r\n                      setNoteId(a.id)\r\n                      setNoteTitle(a.title)}}>\r\n                          <Card.Title>{a.title}</Card.Title>\r\n                      </Card.Body>\r\n                  </LinkContainer>\r\n                  <button className=\"deleteButton\" onClick={() =>{deleteNoteFromDB(ide,notes,a.id)}}><img src={DeleteButton} alt=\"Delete\"/></button>\r\n                  </Card>\r\n                )\r\n                \r\n                })}\r\n            </div>\r\n                 \r\n                 <button className=\"addNote\" onClick={()=>{addNoteToDB(ide,notes)}} onFocus={getNotes()} onvariant=\"info\" type=\"submit\"><img src={PlusButton} alt=\"Add\"/></button>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Boards;"]},"metadata":{},"sourceType":"module"}