{"ast":null,"code":"var _jsxFileName = \"/Users/jemvandeworp/Documents/GitHub/Manifest_Repo/src/components/Boards/Boards.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Card, Container, Button } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport './Boards.css';\nimport Localbase from 'localbase';\nimport PlusButton from \"../../assets/Buttons/AddButton.svg\";\nimport DeleteButton from \"../../assets/Buttons/DeleteButton.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Boards = ({\n  notes,\n  ide,\n  setNotes,\n  boardtitle,\n  setNoteId,\n  setNoteele,\n  setNoteTitle\n}) => {\n  _s();\n\n  window.onbeforeunload = function () {\n    window.setTimeout(function () {\n      window.location = '/';\n    }, 0);\n    window.onbeforeunload = null;\n  };\n\n  let db = new Localbase('Mani');\n  console.log(boardtitle);\n  /*----------Professor Mauro's code if we need to fall back to it----------------\n      function deleteBoard(id, db) {\n          setNotes(notes.filter(n => n.id !== id))\n          db.collection('dbnotes').doc({id:id}).delete()\n      }\n  \n  \n      function getBoards(db) {\n          db.collection('dbnotes').get().then(dbnotes => {\n              //console.log('dbnotes', dbnotes);\n              setNotes(dbnotes)\n          });\n      }\n  \n      useEffect(() => {\n          getBoards(db);\n        }, []);   \n  --------------------------------------------------------------------------------*/\n\n  function addNoteToDB(ide, notes) {\n    var n = notes.length + 1;\n    notes.push({\n      id: n,\n      title: 'note ' + n,\n      noteele: []\n    });\n    db.collection('boards').doc({\n      id: ide\n    }).update({\n      notes: notes\n    });\n  }\n\n  function deleteNoteFromDB(ide, notes, givenId) {\n    var n = notes.findIndex(a => a.id === givenId);\n    notes.splice(n, 1);\n    console.log(notes);\n    db.collection('boards').doc({\n      id: ide\n    }).update({\n      notes: notes\n    });\n  }\n\n  function getNotes() {\n    db.collection('boards').doc({\n      id: ide\n    }).get().then(doc => {\n      console.log(doc);\n\n      if (doc) {\n        setNotes(doc.notes);\n      }\n    });\n  }\n\n  function changeBoardTitle(event) {\n    var newTitle = event.target.value;\n    db.collection('boards').doc({\n      id: ide\n    }).update({\n      title: newTitle\n    });\n    /* var newTitle=event.target.value\n     notes.filter(note =>{\n       if(note.id===noteId){\n         note.title=newTitle\n       }\n     })\n     db.collection('boards').doc({id:ide}).update({\n       notes:notes\n     })*/\n  }\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      getNotes();\n    }, 500);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"appWidth\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: \"1\",\n        className: \"Header\",\n        onChange: changeBoardTitle,\n        children: boardtitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"notes\",\n        children: notes.map(a => {\n          var linker = boardtitle + '/' + a.title;\n          return /*#__PURE__*/_jsxDEV(Card, {\n            id: a.id,\n            className: \"cardBoard\",\n            children: [/*#__PURE__*/_jsxDEV(LinkContainer, {\n              to: linker,\n              children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                onClick: () => {\n                  setNoteele(a.noteele);\n                  setNoteId(a.id);\n                  setNoteTitle(a.title);\n                },\n                children: /*#__PURE__*/_jsxDEV(Card.Title, {\n                  children: a.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"deleteButton\",\n              onClick: () => {\n                deleteNoteFromDB(ide, notes, a.id);\n              },\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: DeleteButton,\n                alt: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 102\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 19\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"addNote\",\n        onClick: () => {\n          addNoteToDB(ide, notes);\n        },\n        variant: \"info\",\n        type: \"submit\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: PlusButton,\n          alt: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 114\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Boards, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Boards;\nexport default Boards;\n\nvar _c;\n\n$RefreshReg$(_c, \"Boards\");","map":{"version":3,"sources":["/Users/jemvandeworp/Documents/GitHub/Manifest_Repo/src/components/Boards/Boards.js"],"names":["React","useEffect","Card","Container","Button","LinkContainer","Localbase","Boards","notes","ide","setNotes","boardtitle","setNoteId","setNoteele","setNoteTitle","window","onbeforeunload","setTimeout","location","db","console","log","addNoteToDB","n","length","push","id","title","noteele","collection","doc","update","deleteNoteFromDB","givenId","findIndex","a","splice","getNotes","get","then","changeBoardTitle","event","newTitle","target","value","interval","setInterval","clearInterval","map","linker","DeleteButton","PlusButton"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,IAAR,EAAaC,SAAb,EAAwBC,MAAxB,QAAqC,iBAArC;AACA,SAAQC,aAAR,QAA4B,wBAA5B;AACA,OAAO,cAAP;AACA,OAAOC,SAAP,MAAsB,WAAtB;;;;;AAKA,MAAMC,MAAM,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAOC,EAAAA,GAAP;AAAWC,EAAAA,QAAX;AAAoBC,EAAAA,UAApB;AAA+BC,EAAAA,SAA/B;AAAyCC,EAAAA,UAAzC;AAAoDC,EAAAA;AAApD,CAAD,KAAuE;AAAA;;AACpFC,EAAAA,MAAM,CAACC,cAAP,GAAwB,YAAW;AACjCD,IAAAA,MAAM,CAACE,UAAP,CAAkB,YAAY;AAC1BF,MAAAA,MAAM,CAACG,QAAP,GAAkB,GAAlB;AACH,KAFD,EAEG,CAFH;AAGAH,IAAAA,MAAM,CAACC,cAAP,GAAwB,IAAxB;AACD,GALD;;AAOE,MAAIG,EAAE,GAAG,IAAIb,SAAJ,CAAc,MAAd,CAAT;AACAc,EAAAA,OAAO,CAACC,GAAR,CAAYV,UAAZ;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,WAASW,WAAT,CAAqBb,GAArB,EAA0BD,KAA1B,EAAgC;AAC5B,QAAIe,CAAC,GAACf,KAAK,CAACgB,MAAN,GAAa,CAAnB;AACAhB,IAAAA,KAAK,CAACiB,IAAN,CAAW;AACTC,MAAAA,EAAE,EAAEH,CADK;AAETI,MAAAA,KAAK,EAAC,UAASJ,CAFN;AAGTK,MAAAA,OAAO,EAAC;AAHC,KAAX;AAKET,IAAAA,EAAE,CAACU,UAAH,CAAc,QAAd,EAAwBC,GAAxB,CAA4B;AAACJ,MAAAA,EAAE,EAACjB;AAAJ,KAA5B,EAAsCsB,MAAtC,CAA6C;AAC7CvB,MAAAA,KAAK,EAACA;AADuC,KAA7C;AAGH;;AACH,WAASwB,gBAAT,CAA0BvB,GAA1B,EAA8BD,KAA9B,EAAoCyB,OAApC,EAA4C;AACpC,QAAIV,CAAC,GAACf,KAAK,CAAC0B,SAAN,CAAgBC,CAAC,IAAIA,CAAC,CAACT,EAAF,KAAOO,OAA5B,CAAN;AAEIzB,IAAAA,KAAK,CAAC4B,MAAN,CAAab,CAAb,EAAe,CAAf;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYb,KAAZ;AACNW,IAAAA,EAAE,CAACU,UAAH,CAAc,QAAd,EAAwBC,GAAxB,CAA4B;AAACJ,MAAAA,EAAE,EAACjB;AAAJ,KAA5B,EAAsCsB,MAAtC,CAA6C;AAC3CvB,MAAAA,KAAK,EAACA;AADqC,KAA7C;AAGD;;AAGL,WAAS6B,QAAT,GAAmB;AACblB,IAAAA,EAAE,CAACU,UAAH,CAAc,QAAd,EAAwBC,GAAxB,CAA4B;AAACJ,MAAAA,EAAE,EAACjB;AAAJ,KAA5B,EAAsC6B,GAAtC,GAA4CC,IAA5C,CAAiDT,GAAG,IAAG;AACnDV,MAAAA,OAAO,CAACC,GAAR,CAAYS,GAAZ;;AACF,UAAGA,GAAH,EAAO;AACPpB,QAAAA,QAAQ,CAACoB,GAAG,CAACtB,KAAL,CAAR;AACC;AACF,KALD;AAMC;;AAEP,WAASgC,gBAAT,CAA0BC,KAA1B,EAAgC;AAC9B,QAAIC,QAAQ,GAACD,KAAK,CAACE,MAAN,CAAaC,KAA1B;AACMzB,IAAAA,EAAE,CAACU,UAAH,CAAc,QAAd,EAAwBC,GAAxB,CAA4B;AAACJ,MAAAA,EAAE,EAACjB;AAAJ,KAA5B,EAAsCsB,MAAtC,CAA6C;AACzCJ,MAAAA,KAAK,EAACe;AADmC,KAA7C;AAGD;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;;AAIHzC,EAAAA,SAAS,CAAC,MAAM;AAChB,UAAM4C,QAAQ,GAACC,WAAW,CAAC,MAAM;AAC/BT,MAAAA,QAAQ;AACT,KAFyB,EAEvB,GAFuB,CAA1B;AAGA,WAAM,MAAKU,aAAa,CAACF,QAAD,CAAxB;AACD,GALU,EAKR,EALQ,CAAT;AAOA,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,2BACI,QAAC,SAAD;AAAA,8BACA;AAAU,QAAA,IAAI,EAAC,GAAf;AAAmB,QAAA,SAAS,EAAC,QAA7B;AAAsC,QAAA,QAAQ,EAAEL,gBAAhD;AAAA,kBAAmE7B;AAAnE;AAAA;AAAA;AAAA;AAAA,cADA,eAcA;AAAK,QAAA,EAAE,EAAC,OAAR;AAAA,kBACCH,KAAK,CAACwC,GAAN,CAAWb,CAAD,IAAK;AACZ,cAAIc,MAAM,GAACtC,UAAU,GAAC,GAAX,GAAewB,CAAC,CAACR,KAA5B;AACA,8BACE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAEQ,CAAC,CAACT,EAAZ;AAAgB,YAAA,SAAS,EAAC,WAA1B;AAAA,oCACA,QAAC,aAAD;AAAe,cAAA,EAAE,EAAEuB,MAAnB;AAAA,qCACI,QAAC,IAAD,CAAM,IAAN;AAAW,gBAAA,OAAO,EAAE,MAAM;AAACpC,kBAAAA,UAAU,CAACsB,CAAC,CAACP,OAAH,CAAV;AAC3BhB,kBAAAA,SAAS,CAACuB,CAAC,CAACT,EAAH,CAAT;AACAZ,kBAAAA,YAAY,CAACqB,CAAC,CAACR,KAAH,CAAZ;AAAsB,iBAFtB;AAAA,uCAGI,QAAC,IAAD,CAAM,KAAN;AAAA,4BAAaQ,CAAC,CAACR;AAAf;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADA,eAQA;AAAQ,cAAA,SAAS,EAAC,cAAlB;AAAiC,cAAA,OAAO,EAAE,MAAK;AAACK,gBAAAA,gBAAgB,CAACvB,GAAD,EAAKD,KAAL,EAAW2B,CAAC,CAACT,EAAb,CAAhB;AAAiC,eAAjF;AAAA,qCAAmF;AAAK,gBAAA,GAAG,EAAEwB,YAAV;AAAwB,gBAAA,GAAG,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA;AAAnF;AAAA;AAAA;AAAA;AAAA,oBARA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF;AAaC,SAfJ;AADD;AAAA;AAAA;AAAA;AAAA,cAdA,eAiCK;AAAQ,QAAA,SAAS,EAAC,SAAlB;AAA4B,QAAA,OAAO,EAAE,MAAI;AAAC5B,UAAAA,WAAW,CAACb,GAAD,EAAKD,KAAL,CAAX;AAAuB,SAAjE;AAAmE,QAAA,OAAO,EAAC,MAA3E;AAAkF,QAAA,IAAI,EAAC,QAAvF;AAAA,+BAAgG;AAAK,UAAA,GAAG,EAAE2C,UAAV;AAAsB,UAAA,GAAG,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA;AAAhG;AAAA;AAAA;AAAA;AAAA,cAjCL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAuCH,CA5HD;;GAAM5C,M;;KAAAA,M;AA8HN,eAAeA,MAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport {Card,Container, Button} from 'react-bootstrap';\nimport {LinkContainer} from 'react-router-bootstrap';\nimport './Boards.css';\nimport Localbase from 'localbase';\nimport PlusButton from \"../../assets/Buttons/AddButton.svg\"\nimport DeleteButton from '../../assets/Buttons/DeleteButton.svg'\n\n\nconst Boards = ({notes,ide,setNotes,boardtitle,setNoteId,setNoteele,setNoteTitle}) => {\n  window.onbeforeunload = function() { \n    window.setTimeout(function () { \n        window.location = '/';\n    }, 0); \n    window.onbeforeunload = null; \n  }\n\n    let db = new Localbase('Mani');\n    console.log(boardtitle)\n    \n/*----------Professor Mauro's code if we need to fall back to it----------------\n    function deleteBoard(id, db) {\n        setNotes(notes.filter(n => n.id !== id))\n        db.collection('dbnotes').doc({id:id}).delete()\n    }\n\n\n    function getBoards(db) {\n        db.collection('dbnotes').get().then(dbnotes => {\n            //console.log('dbnotes', dbnotes);\n            setNotes(dbnotes)\n        });\n    }\n\n    useEffect(() => {\n        getBoards(db);\n      }, []);   \n--------------------------------------------------------------------------------*/\nfunction addNoteToDB(ide, notes){\n    var n=notes.length+1\n    notes.push({\n      id: n,\n      title:'note '+ n,\n      noteele:[]\n    })\n      db.collection('boards').doc({id:ide}).update({\n      notes:notes\n    })\n  }\nfunction deleteNoteFromDB(ide,notes,givenId){\n        var n=notes.findIndex(a => a.id===givenId)\n        \n            notes.splice(n,1)\n            console.log(notes)\n      db.collection('boards').doc({id:ide}).update({\n        notes:notes\n      })\n    }\n\n\nfunction getNotes(){\n      db.collection('boards').doc({id:ide}).get().then(doc =>{\n          console.log(doc)\n        if(doc){\n        setNotes(doc.notes)\n        }\n      })\n      }\n      \nfunction changeBoardTitle(event){\n  var newTitle=event.target.value\n        db.collection('boards').doc({id:ide}).update({\n            title:newTitle\n        })\n       /* var newTitle=event.target.value\n        notes.filter(note =>{\n          if(note.id===noteId){\n            note.title=newTitle\n          }\n        })\n        db.collection('boards').doc({id:ide}).update({\n          notes:notes\n        })*/\n      }\n\n\n\n    useEffect(() => {\n    const interval=setInterval(() => {\n      getNotes();  \n    }, 500);\n    return() =>clearInterval(interval)\n  }, []);\n\n    return (\n        <div className=\"appWidth\">\n            <Container>\n            <textarea rows=\"1\" className=\"Header\" onChange={changeBoardTitle}>{boardtitle}</textarea>\n            {/*----------Professor Mauro's code if we need to fall back to it----------------\n            notes.map((note) => (\n            <Card border=\"warning\" className=\"cardBoard\">\n                    <Card.Body>\n                    <i className=\"icon-trash float-right\" onClick={() => deleteBoard(note.id, db)}></i>\n                    <Card.Title>{note.title}</Card.Title>\n                    <Card.Text>\n                        {note.text}\n                    </Card.Text>\n                    </Card.Body>\n            </Card>\n            ))*/}\n            <div id='notes'>\n            {notes.map((a)=>{\n                var linker=boardtitle+'/'+a.title\n                return(\n                  <Card id={a.id} className=\"cardBoard\">\n                  <LinkContainer to={linker}>\n                      <Card.Body onClick={() => {setNoteele(a.noteele)\n                      setNoteId(a.id)\n                      setNoteTitle(a.title)}}>\n                          <Card.Title>{a.title}</Card.Title>\n                      </Card.Body>\n                  </LinkContainer>\n                  <button className=\"deleteButton\" onClick={() =>{deleteNoteFromDB(ide,notes,a.id)}}><img src={DeleteButton} alt=\"Delete\"/></button>\n                  </Card>\n                )\n                \n                })}\n            </div>\n                 \n                 <button className=\"addNote\" onClick={()=>{addNoteToDB(ide,notes)}} variant=\"info\" type=\"submit\"><img src={PlusButton} alt=\"Add\"/></button>\n            </Container>\n        </div>\n    )\n}\n\nexport default Boards;"]},"metadata":{},"sourceType":"module"}