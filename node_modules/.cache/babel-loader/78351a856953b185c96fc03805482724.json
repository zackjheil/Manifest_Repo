{"ast":null,"code":"/*\r\n  Copyright 2019 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\nimport '../_version.js';\nvar supportStatus;\n/**\r\n * A utility function that determines whether the current browser supports\r\n * constructing a [`ReadableStream`](https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream/ReadableStream)\r\n * object.\r\n *\r\n * @return {boolean} `true`, if the current browser can successfully\r\n *     construct a `ReadableStream`, `false` otherwise.\r\n *\r\n * @private\r\n */\n\nfunction canConstructReadableStream() {\n  if (supportStatus === undefined) {\n    // See https://github.com/GoogleChrome/workbox/issues/1473\n    try {\n      new ReadableStream({\n        start: function start() {}\n      });\n      supportStatus = true;\n    } catch (error) {\n      supportStatus = false;\n    }\n  }\n\n  return supportStatus;\n}\n\nexport { canConstructReadableStream };","map":{"version":3,"sources":["C:/Users/zackj/Documents/GitHub/Manifest_Repo/node_modules/workbox-core/_private/canConstructReadableStream.js"],"names":["supportStatus","canConstructReadableStream","undefined","ReadableStream","start","error"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,gBAAP;AACA,IAAIA,aAAJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,0BAAT,GAAsC;AAClC,MAAID,aAAa,KAAKE,SAAtB,EAAiC;AAC7B;AACA,QAAI;AACA,UAAIC,cAAJ,CAAmB;AAAEC,QAAAA,KAAF,mBAAU,CAAG;AAAb,OAAnB;AACAJ,MAAAA,aAAa,GAAG,IAAhB;AACH,KAHD,CAIA,OAAOK,KAAP,EAAc;AACVL,MAAAA,aAAa,GAAG,KAAhB;AACH;AACJ;;AACD,SAAOA,aAAP;AACH;;AACD,SAASC,0BAAT","sourcesContent":["/*\r\n  Copyright 2019 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport '../_version.js';\r\nlet supportStatus;\r\n/**\r\n * A utility function that determines whether the current browser supports\r\n * constructing a [`ReadableStream`](https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream/ReadableStream)\r\n * object.\r\n *\r\n * @return {boolean} `true`, if the current browser can successfully\r\n *     construct a `ReadableStream`, `false` otherwise.\r\n *\r\n * @private\r\n */\r\nfunction canConstructReadableStream() {\r\n    if (supportStatus === undefined) {\r\n        // See https://github.com/GoogleChrome/workbox/issues/1473\r\n        try {\r\n            new ReadableStream({ start() { } });\r\n            supportStatus = true;\r\n        }\r\n        catch (error) {\r\n            supportStatus = false;\r\n        }\r\n    }\r\n    return supportStatus;\r\n}\r\nexport { canConstructReadableStream };\r\n"]},"metadata":{},"sourceType":"module"}