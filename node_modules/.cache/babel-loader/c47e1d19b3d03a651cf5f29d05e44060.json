{"ast":null,"code":"/*\r\n  Copyright 2019 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\nimport '../_version.js';\nvar supportStatus;\n/**\r\n * A utility function that determines whether the current browser supports\r\n * constructing a new `Response` from a `response.body` stream.\r\n *\r\n * @return {boolean} `true`, if the current browser can successfully\r\n *     construct a `Response` from a `response.body` stream, `false` otherwise.\r\n *\r\n * @private\r\n */\n\nfunction canConstructResponseFromBodyStream() {\n  if (supportStatus === undefined) {\n    var testResponse = new Response('');\n\n    if ('body' in testResponse) {\n      try {\n        new Response(testResponse.body);\n        supportStatus = true;\n      } catch (error) {\n        supportStatus = false;\n      }\n    }\n\n    supportStatus = false;\n  }\n\n  return supportStatus;\n}\n\nexport { canConstructResponseFromBodyStream };","map":{"version":3,"sources":["C:/Users/zackj/Documents/GitHub/Manifest_Repo/node_modules/workbox-core/_private/canConstructResponseFromBodyStream.js"],"names":["supportStatus","canConstructResponseFromBodyStream","undefined","testResponse","Response","body","error"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,gBAAP;AACA,IAAIA,aAAJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,kCAAT,GAA8C;AAC1C,MAAID,aAAa,KAAKE,SAAtB,EAAiC;AAC7B,QAAMC,YAAY,GAAG,IAAIC,QAAJ,CAAa,EAAb,CAArB;;AACA,QAAI,UAAUD,YAAd,EAA4B;AACxB,UAAI;AACA,YAAIC,QAAJ,CAAaD,YAAY,CAACE,IAA1B;AACAL,QAAAA,aAAa,GAAG,IAAhB;AACH,OAHD,CAIA,OAAOM,KAAP,EAAc;AACVN,QAAAA,aAAa,GAAG,KAAhB;AACH;AACJ;;AACDA,IAAAA,aAAa,GAAG,KAAhB;AACH;;AACD,SAAOA,aAAP;AACH;;AACD,SAASC,kCAAT","sourcesContent":["/*\r\n  Copyright 2019 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport '../_version.js';\r\nlet supportStatus;\r\n/**\r\n * A utility function that determines whether the current browser supports\r\n * constructing a new `Response` from a `response.body` stream.\r\n *\r\n * @return {boolean} `true`, if the current browser can successfully\r\n *     construct a `Response` from a `response.body` stream, `false` otherwise.\r\n *\r\n * @private\r\n */\r\nfunction canConstructResponseFromBodyStream() {\r\n    if (supportStatus === undefined) {\r\n        const testResponse = new Response('');\r\n        if ('body' in testResponse) {\r\n            try {\r\n                new Response(testResponse.body);\r\n                supportStatus = true;\r\n            }\r\n            catch (error) {\r\n                supportStatus = false;\r\n            }\r\n        }\r\n        supportStatus = false;\r\n    }\r\n    return supportStatus;\r\n}\r\nexport { canConstructResponseFromBodyStream };\r\n"]},"metadata":{},"sourceType":"module"}