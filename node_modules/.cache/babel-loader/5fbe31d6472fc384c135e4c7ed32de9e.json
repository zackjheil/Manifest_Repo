{"ast":null,"code":"/*\r\n  Copyright 2018 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport '../_version.js';\nexport var messages = {\n  strategyStart: function strategyStart(strategyName, request) {\n    return \"Using \".concat(strategyName, \" to respond to '\").concat(getFriendlyURL(request.url), \"'\");\n  },\n  printFinalResponse: function printFinalResponse(response) {\n    if (response) {\n      logger.groupCollapsed(\"View the final response here.\");\n      logger.log(response || '[No response returned]');\n      logger.groupEnd();\n    }\n  }\n};","map":{"version":3,"sources":["C:/Users/zackj/Documents/GitHub/Manifest_Repo/node_modules/workbox-strategies/utils/messages.js"],"names":["logger","getFriendlyURL","messages","strategyStart","strategyName","request","url","printFinalResponse","response","groupCollapsed","log","groupEnd"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,MAAT,QAAuB,iCAAvB;AACA,SAASC,cAAT,QAA+B,yCAA/B;AACA,OAAO,gBAAP;AACA,OAAO,IAAMC,QAAQ,GAAG;AACpBC,EAAAA,aAAa,EAAE,uBAACC,YAAD,EAAeC,OAAf;AAAA,2BAAoCD,YAApC,6BAAmEH,cAAc,CAACI,OAAO,CAACC,GAAT,CAAjF;AAAA,GADK;AAEpBC,EAAAA,kBAAkB,EAAE,4BAACC,QAAD,EAAc;AAC9B,QAAIA,QAAJ,EAAc;AACVR,MAAAA,MAAM,CAACS,cAAP;AACAT,MAAAA,MAAM,CAACU,GAAP,CAAWF,QAAQ,IAAI,wBAAvB;AACAR,MAAAA,MAAM,CAACW,QAAP;AACH;AACJ;AARmB,CAAjB","sourcesContent":["/*\r\n  Copyright 2018 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport { logger } from 'workbox-core/_private/logger.js';\r\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\r\nimport '../_version.js';\r\nexport const messages = {\r\n    strategyStart: (strategyName, request) => `Using ${strategyName} to respond to '${getFriendlyURL(request.url)}'`,\r\n    printFinalResponse: (response) => {\r\n        if (response) {\r\n            logger.groupCollapsed(`View the final response here.`);\r\n            logger.log(response || '[No response returned]');\r\n            logger.groupEnd();\r\n        }\r\n    },\r\n};\r\n"]},"metadata":{},"sourceType":"module"}