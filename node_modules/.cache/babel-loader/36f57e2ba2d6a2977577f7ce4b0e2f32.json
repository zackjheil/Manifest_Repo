{"ast":null,"code":"import _createForOfIteratorHelper from \"C:/Users/zackj/Documents/GitHub/Manifest_Repo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\n\n/*\r\n  Copyright 2018 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport '../_version.js';\n/**\r\n * @param {string} groupTitle\r\n * @param {Array<string>} deletedURLs\r\n *\r\n * @private\r\n */\n\nvar logGroup = function logGroup(groupTitle, deletedURLs) {\n  logger.groupCollapsed(groupTitle);\n\n  var _iterator = _createForOfIteratorHelper(deletedURLs),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var url = _step.value;\n      logger.log(url);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  logger.groupEnd();\n};\n/**\r\n * @param {Array<string>} deletedURLs\r\n *\r\n * @private\r\n * @memberof module:workbox-precaching\r\n */\n\n\nexport function printCleanupDetails(deletedURLs) {\n  var deletionCount = deletedURLs.length;\n\n  if (deletionCount > 0) {\n    logger.groupCollapsed(\"During precaching cleanup, \" + \"\".concat(deletionCount, \" cached \") + \"request\".concat(deletionCount === 1 ? ' was' : 's were', \" deleted.\"));\n    logGroup('Deleted Cache Requests', deletedURLs);\n    logger.groupEnd();\n  }\n}","map":{"version":3,"sources":["C:/Users/zackj/Documents/GitHub/Manifest_Repo/node_modules/workbox-precaching/utils/printCleanupDetails.js"],"names":["logger","logGroup","groupTitle","deletedURLs","groupCollapsed","url","log","groupEnd","printCleanupDetails","deletionCount","length"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,MAAT,QAAuB,iCAAvB;AACA,OAAO,gBAAP;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,UAAD,EAAaC,WAAb,EAA6B;AAC1CH,EAAAA,MAAM,CAACI,cAAP,CAAsBF,UAAtB;;AAD0C,6CAExBC,WAFwB;AAAA;;AAAA;AAE1C,wDAA+B;AAAA,UAApBE,GAAoB;AAC3BL,MAAAA,MAAM,CAACM,GAAP,CAAWD,GAAX;AACH;AAJyC;AAAA;AAAA;AAAA;AAAA;;AAK1CL,EAAAA,MAAM,CAACO,QAAP;AACH,CAND;AAOA;AACA;AACA;AACA;AACA;AACA;;;AACA,OAAO,SAASC,mBAAT,CAA6BL,WAA7B,EAA0C;AAC7C,MAAMM,aAAa,GAAGN,WAAW,CAACO,MAAlC;;AACA,MAAID,aAAa,GAAG,CAApB,EAAuB;AACnBT,IAAAA,MAAM,CAACI,cAAP,CAAsB,0CACfK,aADe,iCAERA,aAAa,KAAK,CAAlB,GAAsB,MAAtB,GAA+B,QAFvB,cAAtB;AAGAR,IAAAA,QAAQ,CAAC,wBAAD,EAA2BE,WAA3B,CAAR;AACAH,IAAAA,MAAM,CAACO,QAAP;AACH;AACJ","sourcesContent":["/*\r\n  Copyright 2018 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport { logger } from 'workbox-core/_private/logger.js';\r\nimport '../_version.js';\r\n/**\r\n * @param {string} groupTitle\r\n * @param {Array<string>} deletedURLs\r\n *\r\n * @private\r\n */\r\nconst logGroup = (groupTitle, deletedURLs) => {\r\n    logger.groupCollapsed(groupTitle);\r\n    for (const url of deletedURLs) {\r\n        logger.log(url);\r\n    }\r\n    logger.groupEnd();\r\n};\r\n/**\r\n * @param {Array<string>} deletedURLs\r\n *\r\n * @private\r\n * @memberof module:workbox-precaching\r\n */\r\nexport function printCleanupDetails(deletedURLs) {\r\n    const deletionCount = deletedURLs.length;\r\n    if (deletionCount > 0) {\r\n        logger.groupCollapsed(`During precaching cleanup, ` +\r\n            `${deletionCount} cached ` +\r\n            `request${deletionCount === 1 ? ' was' : 's were'} deleted.`);\r\n        logGroup('Deleted Cache Requests', deletedURLs);\r\n        logger.groupEnd();\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}