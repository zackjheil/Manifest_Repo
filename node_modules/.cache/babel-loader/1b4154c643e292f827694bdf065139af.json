{"ast":null,"code":"/*\r\n  Copyright 2019 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\nimport { getOrCreateDefaultRouter } from './utils/getOrCreateDefaultRouter.js';\nimport './_version.js';\n/**\r\n * Define a default `handler` that's called when no routes explicitly\r\n * match the incoming request.\r\n *\r\n * Without a default handler, unmatched requests will go against the\r\n * network as if there were no service worker present.\r\n *\r\n * @param {module:workbox-routing~handlerCallback} handler A callback\r\n * function that returns a Promise resulting in a Response.\r\n *\r\n * @memberof module:workbox-routing\r\n */\n\nfunction setDefaultHandler(handler) {\n  var defaultRouter = getOrCreateDefaultRouter();\n  defaultRouter.setDefaultHandler(handler);\n}\n\nexport { setDefaultHandler };","map":{"version":3,"sources":["C:/Users/zackj/Documents/GitHub/Manifest_Repo/node_modules/workbox-routing/setDefaultHandler.js"],"names":["getOrCreateDefaultRouter","setDefaultHandler","handler","defaultRouter"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,wBAAT,QAAyC,qCAAzC;AACA,OAAO,eAAP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,iBAAT,CAA2BC,OAA3B,EAAoC;AAChC,MAAMC,aAAa,GAAGH,wBAAwB,EAA9C;AACAG,EAAAA,aAAa,CAACF,iBAAd,CAAgCC,OAAhC;AACH;;AACD,SAASD,iBAAT","sourcesContent":["/*\r\n  Copyright 2019 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport { getOrCreateDefaultRouter } from './utils/getOrCreateDefaultRouter.js';\r\nimport './_version.js';\r\n/**\r\n * Define a default `handler` that's called when no routes explicitly\r\n * match the incoming request.\r\n *\r\n * Without a default handler, unmatched requests will go against the\r\n * network as if there were no service worker present.\r\n *\r\n * @param {module:workbox-routing~handlerCallback} handler A callback\r\n * function that returns a Promise resulting in a Response.\r\n *\r\n * @memberof module:workbox-routing\r\n */\r\nfunction setDefaultHandler(handler) {\r\n    const defaultRouter = getOrCreateDefaultRouter();\r\n    defaultRouter.setDefaultHandler(handler);\r\n}\r\nexport { setDefaultHandler };\r\n"]},"metadata":{},"sourceType":"module"}