{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/zackj/Documents/GitHub/Manifest_Repo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/zackj/Documents/GitHub/Manifest_Repo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\n/*\r\n  Copyright 2018 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\nimport '../_version.js';\nexport var cacheOkAndOpaquePlugin = {\n  /**\r\n   * Returns a valid response (to allow caching) if the status is 200 (OK) or\r\n   * 0 (opaque).\r\n   *\r\n   * @param {Object} options\r\n   * @param {Response} options.response\r\n   * @return {Response|null}\r\n   *\r\n   * @private\r\n   */\n  cacheWillUpdate: function () {\n    var _cacheWillUpdate = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              response = _ref.response;\n\n              if (!(response.status === 200 || response.status === 0)) {\n                _context.next = 3;\n                break;\n              }\n\n              return _context.abrupt(\"return\", response);\n\n            case 3:\n              return _context.abrupt(\"return\", null);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function cacheWillUpdate(_x) {\n      return _cacheWillUpdate.apply(this, arguments);\n    }\n\n    return cacheWillUpdate;\n  }()\n};","map":{"version":3,"sources":["C:/Users/zackj/Documents/GitHub/Manifest_Repo/node_modules/workbox-strategies/plugins/cacheOkAndOpaquePlugin.js"],"names":["cacheOkAndOpaquePlugin","cacheWillUpdate","response","status"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,gBAAP;AACA,OAAO,IAAMA,sBAAsB,GAAG;AAClC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACIC,EAAAA,eAAe;AAAA,oFAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,cAAAA,QAAT,QAASA,QAAT;;AAAA,oBACTA,QAAQ,CAACC,MAAT,KAAoB,GAApB,IAA2BD,QAAQ,CAACC,MAAT,KAAoB,CADtC;AAAA;AAAA;AAAA;;AAAA,+CAEFD,QAFE;;AAAA;AAAA,+CAIN,IAJM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAXmB,CAA/B","sourcesContent":["/*\r\n  Copyright 2018 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport '../_version.js';\r\nexport const cacheOkAndOpaquePlugin = {\r\n    /**\r\n     * Returns a valid response (to allow caching) if the status is 200 (OK) or\r\n     * 0 (opaque).\r\n     *\r\n     * @param {Object} options\r\n     * @param {Response} options.response\r\n     * @return {Response|null}\r\n     *\r\n     * @private\r\n     */\r\n    cacheWillUpdate: async ({ response }) => {\r\n        if (response.status === 200 || response.status === 0) {\r\n            return response;\r\n        }\r\n        return null;\r\n    },\r\n};\r\n"]},"metadata":{},"sourceType":"module"}