{"ast":null,"code":"var _jsxFileName = \"/Users/jemvandeworp/Documents/GitHub/Manifest_Repo/src/components/Main/Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Card, ListGroup, Nav, Container, Button } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport Tooltip from '../Tooltips/Tooltips';\nimport Localbase from 'localbase';\nimport * as ManiF from '../helpers.js';\nimport './Main.css';\nimport ManifestJingle from '../../assets/ManifestJingle.mp3';\nimport PlusButton from \"../../assets/Buttons/AddButton.svg\";\nimport DeleteButton from \"../../assets/Buttons/DeleteButton.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet db = new Localbase('Mani');\n\nconst mainpage = ({\n  notebook,\n  setNotebook,\n  setBoardTitle,\n  setNotes,\n  setIde\n}) => {\n  _s();\n\n  function addBoardToDB() {\n    var n = notebook.length + 1;\n    notebook.push({\n      id: n,\n      title: 'Board ' + n,\n      notes: []\n    });\n    db.collection('boards').set(notebook);\n  }\n\n  function getBoards(db) {\n    db.collection('boards').get().then(arr => {\n      setNotebook(arr);\n    });\n  }\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      getBoards(db);\n    }, 500);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"appWidth\",\n    children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n      autoPlay: true,\n      preload: \"auto\",\n      children: /*#__PURE__*/_jsxDEV(\"source\", {\n        type: \"audio/mp3\",\n        src: ManifestJingle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Tooltip, {\n          content: \"These are your boards!\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"titleText\",\n            children: \"Boards\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), notebook.map(a => {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          id: a.id,\n          className: \"Cards\",\n          children: [/*#__PURE__*/_jsxDEV(LinkContainer, {\n            to: `${a.title}`,\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              onClick: () => {\n                setNotes(a.notes);\n                setIde(a.id);\n                setBoardTitle(a.title);\n              },\n              children: /*#__PURE__*/_jsxDEV(Card.Title, {\n                children: a.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"deleteButton\",\n            onClick: () => {\n              ManiF.deleteBoardFromDB(a.id);\n            },\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: DeleteButton,\n              alt: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 99\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 19\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"addButton\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: PlusButton,\n          alt: \"Add\",\n          onClick: addBoardToDB\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 11\n  }, this);\n};\n\n_s(mainpage, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\nexport default mainpage;","map":{"version":3,"sources":["/Users/jemvandeworp/Documents/GitHub/Manifest_Repo/src/components/Main/Main.js"],"names":["React","useEffect","Card","ListGroup","Nav","Container","Button","LinkContainer","Tooltip","Localbase","ManiF","ManifestJingle","db","mainpage","notebook","setNotebook","setBoardTitle","setNotes","setIde","addBoardToDB","n","length","push","id","title","notes","collection","set","getBoards","get","then","arr","interval","setInterval","clearInterval","map","a","deleteBoardFromDB","DeleteButton","PlusButton"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\nimport {Card,ListGroup, Nav, Container, Button} from 'react-bootstrap';\nimport {LinkContainer} from 'react-router-bootstrap';\nimport Tooltip from '../Tooltips/Tooltips';\nimport Localbase from 'localbase';\nimport * as ManiF from '../helpers.js';\nimport './Main.css'\nimport ManifestJingle from '../../assets/ManifestJingle.mp3';\nimport PlusButton from \"../../assets/Buttons/AddButton.svg\"\nimport DeleteButton from \"../../assets/Buttons/DeleteButton.svg\"\nlet db = new Localbase('Mani')\n\nconst mainpage = ({notebook,setNotebook,setBoardTitle,setNotes,setIde}) => {\n\n  function addBoardToDB(){\n    var n= notebook.length+1\n    notebook.push({\n        id: n,\n        title: 'Board '+ n,\n        notes:[]\n    })\n    db.collection('boards').set(notebook)\n}\n\n\nfunction getBoards(db) {\n      db.collection('boards').get().then(arr=>{\n        setNotebook(arr)\n    })\n}\n\n\nuseEffect(() => {\n    const interval=setInterval(() => {\n      getBoards(db);  \n    }, 500);\n    return() =>clearInterval(interval)\n  }, []);\n        \n  \n  return(\n          <div className=\"appWidth\">\n            <audio autoPlay={true} preload=\"auto\" >\n              <source type=\"audio/mp3\" src={ManifestJingle}/>\n            </audio>\n            <Container>\n            <div >\n              <Tooltip content=\"These are your boards!\">\n                <h1 className=\"titleText\">\n                  Boards\n                </h1>\n              </Tooltip>\n            </div>\n            {/*------------------------------}\n            <Card>\n              <ListGroup variant=\"flush\">\n                <ListGroup.Item>\n                  <LinkContainer to=\"/newnote\">\n                    <Nav.Link>New Note</Nav.Link>\n                  </LinkContainer>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <LinkContainer to=\"/boards\">\n                    <Nav.Link>Boards</Nav.Link>\n                      </LinkContainer>\n                    </ListGroup.Item>\n              </ListGroup>\n            </Card>\n  */}\n            {notebook.map((a)=>{\n                return(\n                  <Card id={a.id}  className=\"Cards\">\n                  <LinkContainer to={`${a.title}`}>\n                      <Card.Body onClick={() => {setNotes(a.notes)\n                      setIde(a.id)\n                      setBoardTitle(a.title)}}>\n                          <Card.Title>{a.title}</Card.Title>\n                      </Card.Body>\n                  </LinkContainer>\n                  <button className=\"deleteButton\" onClick={() =>{ManiF.deleteBoardFromDB(a.id)}}><img src={DeleteButton} alt=\"Delete\" /></button>\n                  </Card>\n                )\n                \n                })}\n                \n              \n              <button className=\"addButton\"><img src={PlusButton} alt=\"Add\" onClick={addBoardToDB} /></button>\n              \n            </Container>\n          </div>\n        );\n    }\n\n\nexport default mainpage;"]},"metadata":{},"sourceType":"module"}